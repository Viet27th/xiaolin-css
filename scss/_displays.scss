////
///  CSS for "display", "gap"
////
@use "variables";
@use "mixins";

$_properties: (
  initial: initial,
  none: none,
  inline: inline,
  block: block,
  inline-block: inline-block,
  flex: flex,
  inline-flex: inline-flex,
  grid: grid,
  inline-grid: inline-grid,
);

@each $property_key, $property_value in $_properties {
  .d-#{$property_key} {
    display: $property_value !important;
  }

  @each $breakpoint_key, $breakpoint_value in variables.$breakpoints {
    @include mixins.MinWidth($breakpoint_key) {
      .d-#{$breakpoint_key}-#{$property_key} {
        display: $property_value !important;
      }
    }
  }
}

@each $i in variables.$gapSizes {
  .gap-#{$i} {
    gap: #{$i}px !important;
  }

  .gap-row-#{$i} {
    row-gap: #{$i}px !important;
  }

  .gap-column-#{$i} {
    column-gap: #{$i}px !important;
  }

  @each $breakpoint_key, $breakpoint_value in variables.$breakpoints {
    @include mixins.MinWidth($breakpoint_key) {
      .gap-#{$breakpoint_key}-#{$i} {
        gap: #{$i}px !important;
      }
    
      .gap-row-#{$breakpoint_key}-#{$i} {
        row-gap: #{$i}px !important;
      }
    
      .gap-column-#{$breakpoint_key}-#{$i} {
        column-gap: #{$i}px !important;
      }
    }
  }
}
